{"version":3,"sources":["days\\20200703.scss","common.scss"],"names":[],"mappings":"AAOA;EACI;;;AAGJ;EACI;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;;;AAGJ;EACI;EACA;EACA;EACA;EACA;;;AAGJ;EACI;EACA;;;AA4BJ;EACI;IACI;;EAEJ;IACI;;;AAIR;EACI;IACI;;EAEJ;IACI;;;AAIR;EACI;IACI;;EAEJ;IACI;;;AAsCJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,ODiGO;EChGP,QDgGO;EAEP;EA4BI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA;;;AARJ;EC3HA,OD2FuB;EC1FvB,QD0FuB;ECrFvB;EDsFA;EAmCI;EACA;EACA;EACA;EACA","file":"creative-coding.e31bb0bc.css","sourceRoot":"..","sourcesContent":["@use \"/common.scss\";\r\n@use \"sass:math\";\r\n@use \"sass:color\";\r\n@use \"sass:list\";\r\n@use \"sass:meta\";\r\n@use \"sass:map\";\r\n\r\n:root {\r\n    --regen: 12324441398\r\n}\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    display: grid;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    background-color: cornflowerblue;\r\n}\r\n\r\n.art {\r\n    position: relative;\r\n    width: 600px;\r\n    height: 600px;\r\n    border: 1px dashed red;\r\n    background-color: darken(white, 1%);\r\n}\r\n\r\n.block {\r\n    position: absolute;\r\n    border: 3px solid;\r\n}\r\n\r\n@function random-by($max, $by) {\r\n    $base: math.floor($max / $by);\r\n    $rand: math.random($base);\r\n    @return $rand * $by;\r\n}\r\n\r\n@function random-one-of($args...) {\r\n    $len: list.length($args);\r\n    $rand: math.random($len);\r\n    \r\n    $pick: nth($args, $rand);\r\n    @debug($pick);\r\n    @return $pick;\r\n}\r\n\r\n// Return one or the other beteween two choices. Choices are lopsided by $weight\r\n@function random-weighted-either-or($max, $weight, $first, $second) {\r\n    $rand: math.random($max);\r\n    @if $rand < $weight {\r\n        @return $second;\r\n    } @else {\r\n        @return $first;\r\n    }\r\n}\r\n\r\n@keyframes pulse {\r\n    0% {\r\n        transform: scale(0.1);\r\n    }\r\n    100% {\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n@keyframes grow-square-small {\r\n    0% {\r\n        height: 0\r\n    }\r\n    100% {\r\n        height: 50px;\r\n    }\r\n}\r\n\r\n@keyframes grow-square-big {\r\n    0% {\r\n        height: 0\r\n    }\r\n    100% {\r\n        height: 150px;\r\n    }\r\n}\r\n\r\n\r\n@mixin rando-circle() {\r\n    @include common.circle(50px);\r\n    animation: pulse 1s ease-in-out alternate infinite;\r\n}\r\n\r\n@mixin rando-square() {\r\n    $anim-name: (50px: grow-square-small, 150px: grow-square-big);\r\n    $size: random-weighted-either-or(10, 3, 50px, 150px);\r\n    @include common.square($size);\r\n    animation: map.get($anim-name, $size) 1s ease-in-out alternate infinite;\r\n}\r\n\r\n@mixin rando-shape() {\r\n    $shape: random-one-of(circle, square);\r\n\r\n    @if $shape == circle {\r\n        @include rando-circle();\r\n    } @else if $shape == square {\r\n        @include rando-square();\r\n    } @else {\r\n        @error(\"Don't know how to draw a \" $shape);\r\n    }\r\n}\r\n\r\n// Can't do this apparently! - https://github.com/sass/sass/issues/626\r\n// @mixin rando-shape() {\r\n//     $shapefunc: rando-circle;\r\n//     $func: meta.get-function($shapefunc);\r\n\r\n//     $throwaway: meta.call($func);\r\n// }\r\n\r\n@for $i from 1 through 30 {\r\n    .block:nth-child(#{$i}) {\r\n        @include rando-shape();\r\n        $pos-from: random-one-of(top, bottom);\r\n\r\n        left: 50px + random-by(400, 65) * 1px;\r\n        #{$pos-from}: 50px + random-by(400, 25) * 1px;\r\n        display: #{random-weighted-either-or(40, 2, block, none)};\r\n        border-color: darken(random-one-of(hotpink, lightblue), 18%);\r\n        animation-delay: -3s * math.random();\r\n    }\r\n}","@mixin square($size) {\r\n    width: $size;\r\n    height: $size;\r\n}\r\n\r\n@mixin circle($size) {\r\n    @include square($size);\r\n    border-radius: 50%;\r\n}"]}