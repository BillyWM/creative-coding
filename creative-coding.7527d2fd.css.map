{"version":3,"sources":["common.scss","days\\20200703.scss","days\\20200704.scss"],"names":[],"mappings":"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","file":"creative-coding.7527d2fd.css","sourceRoot":"","sourcesContent":["@use \"sass:list\";\r\n@use \"sass:math\";\r\n\r\n@mixin square($size) {\r\n    width: $size;\r\n    height: $size;\r\n}\r\n\r\n@mixin circle($size) {\r\n    @include square($size);\r\n    border-radius: 50%;\r\n}\r\n\r\n\r\n@function random-by($max, $by) {\r\n    $base: math.floor($max / $by);\r\n    $rand: math.random($base);\r\n    @return $rand * $by;\r\n}\r\n\r\n@function random-one-of($args...) {\r\n    $len: list.length($args);\r\n    $rand: math.random($len);\r\n    \r\n    $pick: nth($args, $rand);\r\n    @return $pick;\r\n}\r\n\r\n// Return one or the other beteween two choices. Choices are lopsided by $weight\r\n@function random-weighted-either-or($max, $weight, $first, $second) {\r\n    $rand: math.random($max);\r\n    @if $rand < $weight {\r\n        @return $second;\r\n    } @else {\r\n        @return $first;\r\n    }\r\n}\r\n\r\n\r\nbody {\r\n    margin: 0;\r\n    padding: 0;\r\n    display: grid;\r\n    justify-items: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    width: 100vw;\r\n    height: 100vh;\r\n\r\n    background-color: cornflowerblue;\r\n}\r\n\r\n.art {\r\n    position: relative;\r\n    width: 600px;\r\n    height: 600px;\r\n    border: 1px dashed red;\r\n    background-color: darken(white, 1%);\r\n}","@use \"/common.scss\";\r\n@use \"sass:math\";\r\n@use \"sass:color\";\r\n@use \"sass:list\";\r\n@use \"sass:meta\";\r\n@use \"sass:map\";\r\n\r\nbody#day1 {\r\n    .block {\r\n        position: absolute;\r\n        border: 3px solid;\r\n    }    \r\n}\r\n\r\n\r\n@keyframes pulse {\r\n    0% {\r\n        transform: scale(0.1);\r\n    }\r\n    100% {\r\n        transform: scale(1);\r\n    }\r\n}\r\n\r\n@keyframes grow-square-small {\r\n    0% {\r\n        height: 0\r\n    }\r\n    100% {\r\n        height: 50px;\r\n    }\r\n}\r\n\r\n@keyframes grow-square-big {\r\n    0% {\r\n        height: 0\r\n    }\r\n    100% {\r\n        height: 150px;\r\n    }\r\n}\r\n\r\n\r\n@mixin rando-circle() {\r\n    @include common.circle(50px);\r\n    animation: pulse 1s ease-in-out alternate infinite;\r\n}\r\n\r\n@mixin rando-square() {\r\n    $anim-name: (50px: grow-square-small, 150px: grow-square-big);\r\n    $size: common.random-weighted-either-or(10, 3, 50px, 150px);\r\n    @include common.square($size);\r\n    animation: map.get($anim-name, $size) 1s ease-in-out alternate infinite;\r\n}\r\n\r\n@mixin rando-shape() {\r\n    $shape: common.random-one-of(circle, square);\r\n\r\n    @if $shape == circle {\r\n        @include rando-circle();\r\n    } @else if $shape == square {\r\n        @include rando-square();\r\n    } @else {\r\n        @error(\"Don't know how to draw a \" $shape);\r\n    }\r\n}\r\n\r\n// Can't do this apparently! - https://github.com/sass/sass/issues/626\r\n// @mixin rando-shape() {\r\n//     $shapefunc: rando-circle;\r\n//     $func: meta.get-function($shapefunc);\r\n\r\n//     $throwaway: meta.call($func);\r\n// }\r\n\r\n@for $i from 1 through 30 {\r\n    body#day1 .block:nth-child(#{$i}) {\r\n        @include rando-shape();\r\n        $pos-from: common.random-one-of(top, bottom);\r\n\r\n        left: 50px + common.random-by(400, 65) * 1px;\r\n        #{$pos-from}: 50px + common.random-by(400, 25) * 1px;\r\n        display: #{common.random-weighted-either-or(40, 2, block, none)};\r\n        border-color: darken(common.random-one-of(hotpink, lightblue), 18%);\r\n        animation-delay: -3s * math.random();\r\n    }\r\n}","@use \"/common.scss\";\r\n@use \"sass:math\";\r\n@use \"sass:color\";\r\n@use \"sass:list\";\r\n@use \"sass:meta\";\r\n@use \"sass:map\";\r\n\r\n@mixin wedge($size, $color, $pct) {\r\n    @if not list.index((0% 25% 50% 75% 100%), $pct) {\r\n        @error \"Invalid percentage value \" $pct;\r\n    }\r\n\r\n    width: $size;\r\n    height: $size;\r\n\r\n    border-radius: 50%;\r\n\r\n    @if math.random(2) == 1 {\r\n        background: conic-gradient($color $pct, transparent 0 (100% - $pct));\r\n    } @else {\r\n        background: conic-gradient(transparent 0 $pct, $color 0 (100% - $pct));\r\n    }\r\n\r\n}\r\n\r\nbody#day2 {\r\n    .art {\r\n        display: grid;\r\n        // grid-template-rows: repeat(10, 1fr);\r\n        grid-template-columns: repeat(10, 1fr);\r\n        align-items: center;\r\n        justify-items: center;\r\n\r\n        background-color: black;\r\n    }\r\n    \r\n    .block {\r\n        // position: absolute;\r\n        // border: 3px solid;\r\n    }\r\n}\r\n\r\n\r\n:root {\r\n    --regen: aksdjf;\r\n}\r\n\r\n@for $i from 1 through 100 {\r\n    body#day2 .block:nth-child(#{$i}) {\r\n\r\n        $size: 48px;\r\n\r\n        $dot-or-wedge: common.random-weighted-either-or(50, 8, wedge, dot);\r\n        $pct: common.random-one-of(25%, 50%, 75%);\r\n        $spin: common.random-one-of(0deg, 90deg, 180deg, 270deg);\r\n        $col: common.random-one-of(cyan, white, blue);\r\n\r\n        @if $dot-or-wedge == wedge {\r\n            @include wedge(48px, $col, $pct);\r\n            // transform: rotate($spin);\r\n        } @else {\r\n            @include common.circle($size/3);\r\n            background-color: $col;\r\n        }\r\n\r\n        transition: none;\r\n        transform-origin: center center;\r\n        animation: wedge-clock-spin (math.random(3) * 1.5s) steps(4) infinite;\r\n        animation-delay: -1 * math.random(5);\r\n\r\n    }\r\n}\r\n\r\n@keyframes wedge-clock-spin {\r\n    from {\r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n}"]}